// ==========================================================================
// Skills Component
// ==========================================================================
//
// This file contains styles for the interactive skills bubbles component.
// It creates an animated display of skills using floating, interactive bubbles.
//
// Usage:
// <div class="skills-container">
//   <div class="skill">
//     <span class="skill-name">Skill Name</span>
//   </div>
// </div>

@use '../abstracts/variables' as vars;
@use '../abstracts/functions' as fn;
@use '../abstracts/colors' as c;
@use '../abstracts/mixins' as mx;
@use '../abstracts/breakpoints' as bp;
@use '../vendor/vendor' as vendor;
@use 'sass:map';
@use 'sass:color';

// ==========================================================================
// Skills Container
// ==========================================================================

.skills-wrapper {
  display: flex;
  width: 100%;
  gap: 2rem;
  position: relative;

  @include bp.breakpoint('<=medium') {
    flex-direction: column;
  }
}

.skills-section {
  flex: 1;
  display: flex;
  flex-direction: column;
  min-height: 500px;

  &.software {
    flex: 3;
    
    .skills-section-title {
      background: linear-gradient(to right, c.alpha('accent-alt', 0), c.alpha('secondary', 0.2), c.alpha('accent-alt', 0));
      position: relative;
    }
  }

  &.mechanical {
    flex: 2;
    
    .skills-section-title {
      background: linear-gradient(to right, c.alpha('accent-alt', 0), c.alpha('secondary', 0.2), c.alpha('accent-alt', 0));
    }
  }

  .skills-section-title {
    text-align: center;
    color: c.color('accent-alt');
    font-size: 1.5em;
    margin: 0 0 1rem 0;
    position: relative;
    display: inline-block;
    align-self: center;
    padding: 0.5rem 1.5rem;
    border-radius: 30px;
    
    &::after {
      content: '';
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
      right: auto;
      bottom: -5px;
      height: 2px;
      width: 60%;
      background: linear-gradient(to right, c.alpha('accent-alt', 0), c.color('accent-alt'), c.alpha('accent-alt', 0));
    }
  }
}

.skills-container {
  flex: 1;
  position: relative;
  padding: 1rem;
  border: 2px solid c.color('secondary');
  border-radius: 15px;
  overflow: hidden;
  background: linear-gradient(135deg, c.alpha('secondary-dark', 0.3) 0%, c.alpha('primary-dark', 0.2) 100%);
  box-shadow: 0 5px 15px c.alpha('background-dark', 0.5);
  transition: all 0.3s ease;

  &:hover {
    border-color: c.color('secondary-light');
    transform: translateY(-5px);
    box-shadow: 0 8px 20px c.alpha('background-dark', 0.7);
  }
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 100%;
    background: radial-gradient(circle at top right, c.alpha('secondary-light', 0.1), transparent 70%);
    pointer-events: none;
  }
  
  &.software {
    border-left: 4px solid c.color('secondary');
  }
  
  &.mechanical {
    border-right: 4px solid c.color('secondary');
  }

  .skills-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
    align-items: center;
    padding: 1rem;
    width: 100%;
    position: relative;
    z-index: 1;
  }
}

// Skill Tags
.skill {
  opacity: 0;
  transform: translateY(20px);
  transition: all fn.duration('transition') ease-out;

  &.visible {
    opacity: 1;
    transform: translateY(0);
  }

  a {
    position: relative;
    display: inline-block;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    text-decoration: none;
    color: c.color('text');
    border: 2px solid c.color('accent');
    font-size: clamp(0.8rem, 2.5vw, 1rem);
    font-weight: fn.font-weight('bold');
    background-color: c.alpha('primary-light', 0.5);
    transition: all fn.duration('transition') cubic-bezier(0.175, 0.885, 0.32, 1.275),
      opacity fn.duration('transition') ease;
    overflow: hidden;
    box-shadow: 0 3px 8px c.alpha('background-dark', 0.3);

    .skill-progress {
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      width: var(--skill-level);
      background: linear-gradient(90deg, c.color('accent-dark'), c.color('accent'));
      opacity: var(--skill-progress-opacity);
      transition: all fn.duration('transition') ease;
      
      &::after {
        content: '';
        position: absolute;
        right: 0;
        top: 0;
        height: 100%;
        width: 1px;
        background: c.alpha('secondary', 0.5);
      }
    }

    .skill-text {
      position: relative;
      z-index: 1;
    }

    &:hover {
      transform: translateY(var(--skill-hover-translate)) scale(var(--skill-hover-scale));
      border-color: c.color('secondary');
      box-shadow: 0 8px 16px c.alpha('background-dark', 0.5), 
                  0 0 10px c.alpha('secondary', 0.3);

      .skill-progress {
        background: linear-gradient(90deg, c.color('secondary-dark'), c.color('secondary'));
        opacity: var(--skill-progress-hover-opacity);
      }
      
      .skill-text {
        color: c.color('text-light');
      }
    }
  }

  // Responsive adjustments
  @include bp.breakpoint('<=medium') {
    a {
      font-size: clamp(0.8rem, 3vw, 1.4rem);
      // padding: 0.4rem 0.8rem;
    }
  }

  @include bp.breakpoint('<=small') {
    a {
      font-size: clamp(0.8rem, 4vw, 1rem);
      // padding: 0.3rem 0.6rem;
    }
  }
}
