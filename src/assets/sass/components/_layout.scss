// ==========================================================================
// Layout Component
// ==========================================================================

@use '../abstracts/functions' as fn;
@use '../abstracts/mixins' as mx;
@use '../abstracts/colors' as c;
@use '../abstracts/breakpoints' as bp;

// Layout Variables
$header-width: fn.layout('header-width');
$header-side: fn.layout('header-side');

// ==========================================================================
// Core Layout
// ==========================================================================

#wrapper {
  background: c.color('background');
  padding: 0;
  transition: transform fn.duration('standard') ease;
}

#main {
  > section {
    &:first-child {
      border-top: 0;
    }
    > .container {
      padding: 4em 0 2em 0;
    }
  }
}

// Grid System
.row {
  @include mx.grid(2em);

  @include bp.breakpoint('<=xlarge') {
    @include mx.grid(2em, 'xlarge');
  }

  @include bp.breakpoint('<=large') {
    @include mx.grid(1.5em, 'large');
  }

  @include bp.breakpoint('<=medium') {
    @include mx.grid(1.5em, 'medium');
  }

  @include bp.breakpoint('<=small') {
    @include mx.grid(1.25em, 'small');
  }

  @include bp.breakpoint('<=xsmall') {
    @include mx.grid(1.25em, 'xsmall');
  }
}

// ==========================================================================
// Responsive Layout
// ==========================================================================

@include bp.breakpoint('>=xlarge') {
  #wrapper {
    body:has(#header.header-visible) & {
      width: calc(100% - #{fn.layout('header-width') * 0.9});
    }
  }
}

@include bp.breakpoint('<=xlarge') {
  #wrapper {
    body:has(#header.header-visible) & {
      width: calc(100% - #{fn.layout('header-width') * 0.9});
    }
  }
}

@include bp.breakpoint('<=large') {
  #wrapper {
    & {
      padding: fn.layout('titlebar-height') 0 0 0;
    }
    body:has(#header.header-visible) & {
      width: calc(100% - #{fn.layout('header-width') * 0.8});
    }
  }
}

@include bp.breakpoint('<=small') {
  #main {
    > section {
      > .container {
        padding: 2em 0 0 0;
      }
    }
  }
}

// ==========================================================================
// Container System
// ==========================================================================

.container {
  & {
    margin: 0 auto;
    max-width: calc(100% - (fn.spacing('medium') * 2));
    width: fn.layout('container-width');
  }

  &.xsmall {
    width: (fn.layout('container-width') * 0.25);
  }
  &.small {
    width: (fn.layout('container-width') * 0.5);
  }
  &.medium {
    width: (fn.layout('container-width') * 0.75);
  }
  &.large {
    width: (fn.layout('container-width') * 1.25);
  }
  &.xlarge {
    width: (fn.layout('container-width') * 1.5);
  }
  &.max {
    width: 100%;
  }

  @include bp.breakpoint('<=medium') {
    & {
      width: 100% !important;
    }
  }

  @include bp.breakpoint('<=xsmall') {
    & {
      max-width: calc(100% - (fn.layout('container-width') * 1.5));
    }
  }
}
