// ==========================================================================
// Variables Library
// ==========================================================================
//
// This file contains all the variables used throughout the application.
// Variables are organized by type (typography, colors, layout, etc.)
//
// Usage:
// font-family: vars.$font-family-base;
// color: vars.$color-primary;
// margin: vars.$spacing-base;

@use "sass:map";
@use "colors" as c;

// ==========================================================================
// Typography
// ==========================================================================

$base-font-size: 16px;

$typography: (
  "family": (
    "primary": (
      "Lato",
      sans-serif,
    ),
    "code": (
      "Source Code Pro",
      monospace,
    ),
  ),
);

$font-weights: (
  "regular": 400,
  "bold": 700,
);

$font-sizes: (
  "base": 1rem,
  "small": 0.875rem,
  "large": 1.25rem,
  "h1": 2.5rem,
  "h2": 2rem,
  "h3": 1.75rem,
);

// ==========================================================================
// Layout
// ==========================================================================

$layout: (
  "header-side": "right",
  "header-width": 23em,
  "container-width": 45em,
);

$sizes: (
  "border-radius": 5px,
  "border-width": 2px,
  "element-height": 2.75em,
  "element-margin": 2em,
  "container-width": 45em,
  "header-width": 23em,
);

$spacing: (
  "none": 0,
  "xxsmall": 0.25rem,
  "xsmall": 0.5rem,
  "small": 1rem,
  "medium": 2rem,
  "large": 3rem,
  "xlarge": 4rem,
  "xxlarge": 6rem,
);

// ==========================================================================
// Z-index Layers
// ==========================================================================

$z-index: (
  "base": 10000,
  "header": 10001,
  "modal": 10002,
);

// ==========================================================================
// Animation Durations
// ==========================================================================

$durations: (
  "transition": 0.2s,
  "animation": 1s,
);

// ==========================================================================
// Breakpoints
// ==========================================================================

/// Breakpoint configuration
/// @type Map
$breakpoints: (
  "xlarge": (
    1281px,
    1680px,
  ),
  "large": (
    1025px,
    1280px,
  ),
  "medium": (
    737px,
    1024px,
  ),
  "small": (
    481px,
    736px,
  ),
  "xsmall": (
    null,
    480px,
  ),
);

// ==========================================================================
// Component Variables
// ==========================================================================

/// Component-specific variables
/// @type Map
$component-vars: (
  "skills": (
    "bubble-opacity": 0.9,
    "hover-scale": 1.2,
    "float-distance": "20px",
    "float-duration": "3s",
    "wiggle-duration": "0.3s",
    "wiggle-rotation": "5deg",
  ),
  "us-tour": (
    "state-unvisited": map.get(c.$colors, "secondary"),
    "state-visited": map.get(c.$colors, "accent"),
    "state-hover": map.get(c.$colors, "accent-light"),
    "state-border": map.get(c.$colors, "tertiary"),
  ),
  "world-tour": (
    "land": map.get(c.$colors, "secondary"),
    "visited-country": map.get(c.$colors, "accent"),
    "border": map.get(c.$colors, "tertiary"),
    "ocean": map.get(c.$colors, "primary-light"),
    "graticule": map.get(c.$colors, "secondary-light"),
    "flight-path": map.get(c.$colors, "accent-light"),
    "transition-duration": "0.3s",
  ),
);

:root {
  // Skills component
  --skills-bubble-opacity: #{map.get($component-vars, "skills", "bubble-opacity")};
  --skills-hover-scale: #{map.get($component-vars, "skills", "hover-scale")};
  --skills-float-distance: #{map.get($component-vars, "skills", "float-distance")};
  --skills-float-duration: #{map.get($component-vars, "skills", "float-duration")};
  --skills-wiggle-duration: #{map.get($component-vars, "skills", "wiggle-duration")};
  --skills-wiggle-rotation: #{map.get($component-vars, "skills", "wiggle-rotation")};

  // US Tour component
  --us-tour-state-unvisited: #{map.get($component-vars, "us-tour", "state-unvisited")};
  --us-tour-state-visited: #{map.get($component-vars, "us-tour", "state-visited")};
  --us-tour-state-hover: #{map.get($component-vars, "us-tour", "state-hover")};
  --us-tour-state-border: #{map.get($component-vars, "us-tour", "state-border")};

  // World Tour component
  --world-land-color: #{map.get($component-vars, "world-tour", "land")};
  --world-visited-country-color: #{map.get($component-vars, "world-tour", "visited-country")};
  --world-border-color: #{map.get($component-vars, "world-tour", "border")};
  --world-ocean-color: #{map.get($component-vars, "world-tour", "ocean")};
  --world-graticule-color: #{map.get($component-vars, "world-tour", "graticule")};
  --world-flight-path-color: #{map.get($component-vars, "world-tour", "flight-path")};
  --world-transition-duration: #{map.get($component-vars, "world-tour", "transition-duration")};
}
