// ==========================================================================
// Variables Library
// ==========================================================================
//
// This file contains all the variables used throughout the application.
// Variables are organized by type (typography, colors, layout, etc.)
//
// Usage:
// font-family: vars.$font-family-base;
// color: vars.$color-primary;
// margin: vars.$spacing-base;
//
// Note: Commented sections indicate code that is currently unused but may be
// valuable for future development or reference.

@use 'sass:map';
@use 'colors' as c;

// ==========================================================================
// Titlebar
// ==========================================================================

$titlebar-toggle-height: 4em !default;
$titlebar-toggle-width: 6em !default;
$titlebar-icon-size: 18px !default;
$titlebar-icon-width: 50px !default;

// ==========================================================================
// Typography
// ==========================================================================
// Core typography settings including font families, weights, and size scale

$base-font-size: 16px;

$font-families: (
  'primary': (
    -apple-system,
    BlinkMacSystemFont,
    'Segoe UI',
    Roboto,
    'Helvetica Neue',
    Arial,
    sans-serif,
  ),
  'code': (
    'SF Mono',
    'Consolas',
    'Monaco',
    'Andale Mono',
    'Ubuntu Mono',
    monospace,
  ),
);

$font-weights: (
  'regular': 400,
  'bold': 700,
);

$font-sizes: (
  'base': 1rem,
  'small': 0.875rem,
  'large': 1.25em,
  'h1': 2.5rem,
  'h2': 2rem,
  'h3': 1.75rem,
  'h4': 1.25em,
  'h5': 0.9em,
);

// ==========================================================================
// Layout
// ==========================================================================
// Core structural measurements and container configurations

$layout: (
  'header-width': 23em,
  'border-radius': 5px,
  'element-height': 2.75em,
  'container-width': 45em,
  'header-side': 'right',
  'titlebar-height': 44px,
  // Used in wrapper padding calculations
);

// ==========================================================================
// Spacing
// ==========================================================================
// Consistent spacing units for margins, padding, and gaps
// Uses a t-shirt size scale for intuitive naming

$spacing: (
  'none': 0,
  'xsmall': 0.6rem,
  'small': 1rem,
  'medium': 2rem,
  'large': 3rem,
  'xlarge': 4rem,
  'xxlarge': 6em,
);

// ==========================================================================
// Z-index Layers
// ==========================================================================

$z-index: (
  'base': 10000,
  'header': 10001,
  'modal': 10002,
);

// ==========================================================================
// Animation Durations
// ==========================================================================
// Standardized timing values for animations and transitions

$durations: (
  'transition': 0.2s,
  'animation': 1s,
);

// ==========================================================================
// Component Variables
// ==========================================================================
// Component-specific configuration variables

$component-vars: (
  'skills': (
    'base-color': map.get(c.$colors, 'secondary'),
    'bubble-opacity': 0.95,
    'hover-scale': 1.2,
    'float-distance': '10px',
    'float-duration': '4s',
    'wiggle-duration': '0.3s',
    'wiggle-rotation': '7deg',
  ),
  'us-tour': (
    'state-unvisited-color': map.get(c.$colors, 'secondary'),
    'state-visited-color': map.get(c.$colors, 'accent'),
    'state-hover-color': map.get(c.$colors, 'accent-alt'),
    'state-border-color': map.get(c.$colors, 'tertiary'),
  ),
  'world-tour': (
    'land-color': map.get(c.$colors, 'secondary'),
    'visited-country-color': map.get(c.$colors, 'accent'),
    'border-color': map.get(c.$colors, 'tertiary'),
    'ocean-color': map.get(c.$colors, 'primary-light'),
    'graticule-color': map.get(c.$colors, 'secondary-light'),
    'flight-path-color': map.get(c.$colors, 'accent-light'),
    'transition-duration': '0.3s',
  ),
);

// CSS Custom Properties
// These variables are exposed to the CSS scope for runtime access
:root {
  // Skills component
  --skill-base-color: #{map.get($component-vars, 'skills', 'base-color')};
  --skills-bubble-opacity: #{map.get($component-vars, 'skills', 'bubble-opacity')};
  --skills-hover-scale: #{map.get($component-vars, 'skills', 'hover-scale')};
  --skills-float-distance: #{map.get($component-vars, 'skills', 'float-distance')};
  --skills-float-duration: #{map.get($component-vars, 'skills', 'float-duration')};
  --skills-wiggle-duration: #{map.get($component-vars, 'skills', 'wiggle-duration')};
  --skills-wiggle-rotation: #{map.get($component-vars, 'skills', 'wiggle-rotation')};

  // US Tour component
  --us-tour-state-unvisited-color: #{map.get($component-vars, 'us-tour', 'state-unvisited-color')};
  --us-tour-state-visited-color: #{map.get($component-vars, 'us-tour', 'state-visited-color')};
  --us-tour-state-hover-color: #{map.get($component-vars, 'us-tour', 'state-hover-color')};
  --us-tour-state-border-color: #{map.get($component-vars, 'us-tour', 'state-border-color')};

  // World Tour component
  --world-land-color: #{map.get($component-vars, 'world-tour', 'land-color')};
  --world-visited-country-color: #{map.get($component-vars, 'world-tour', 'visited-country-color')};
  --world-border-color: #{map.get($component-vars, 'world-tour', 'border-color')};
  --world-ocean-color: #{map.get($component-vars, 'world-tour', 'ocean-color')};
  --world-graticule-color: #{map.get($component-vars, 'world-tour', 'graticule-color')};
  --world-flight-path-color: #{map.get($component-vars, 'world-tour', 'flight-path-color')};
  --world-transition-duration: #{map.get($component-vars, 'world-tour', 'transition-duration')};

  // Projects component
  --project-card-width: 300px;
  --project-card-height: 450px;
}
