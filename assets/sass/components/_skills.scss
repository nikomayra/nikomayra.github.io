@use "../libs/vars" as *;
@use "sass:map";
@use "sass:color";

// Animation Variables
$animation: (
  bubble-opacity: 0.95,
  hover-scale: 1.2,
  float-distance: 6px,
  float-duration: 7s,
  wiggle-duration: 0.4s,
  wiggle-rotation: 7deg,
);

// Base skill color from accent-1
$skill-base-color: map.get($palette, accent-1, bg);

:root {
  // Set animation variables
  --bubble-opacity: #{map.get($animation, bubble-opacity)};
  --hover-scale: #{map.get($animation, hover-scale)};
  --float-distance: #{map.get($animation, float-distance)};
  --float-duration: #{map.get($animation, float-duration)};
  --wiggle-duration: #{map.get($animation, wiggle-duration)};
  --wiggle-rotation: #{map.get($animation, wiggle-rotation)};

  // Base color for skills
  --skill-base-color: #{$skill-base-color};
}

body {
  margin: 0;
  overflow: hidden;
  // background: white;
  font-family: -apple-system, system-ui, BlinkMacSystemFont;
}

.skills-container {
  position: relative;
  width: 100%;
  height: 100%;
  min-height: 500px;
  display: flex;
  justify-content: center;
  align-items: center;
  background: map.get($palette, primary, bg);
  overflow: hidden;
  // padding: 2em;
  // border: solid 5px black;
}

.skill {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  color: map.get($palette, tertiary, bg);
  font-weight: map.get($font, weight-bold);
  cursor: pointer;
  text-align: center;
  box-sizing: border-box;
  opacity: var(--bubble-opacity);
  padding: 0;
  user-select: none;

  // Animations and transitions
  transition: transform map.get($duration, transition)
      cubic-bezier(0.175, 0.885, 0.32, 1.275),
    box-shadow map.get($duration, transition) ease,
    color map.get($duration, transition) ease;
  animation: float var(--float-duration) ease-in-out infinite;

  // Visual effects
  border: map.get($size, border-width) solid rgba(255, 255, 255, 0.15);
  box-shadow: inset 0 0 30px rgba(0, 0, 0, 0.1), 0 4px 12px rgba(0, 0, 0, 0.1);

  &:hover {
    // transform: scale(var(--hover-scale));
    z-index: map.get($misc, z-index-base);
    // box-shadow: inset 0 0 30px rgba(0, 0, 0, 0.15),
    //   0 8px 20px rgba(0, 0, 0, 0.2);
    border-color: rgba(255, 255, 255, 0.4);
    animation: wiggle var(--wiggle-duration) ease infinite;
  }

  a {
    border: none;
    text-decoration: none;
    // color: inherit;
  }
}

.skill .skill-name {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  // padding: 15%;
  // word-break: break-word;
  word-wrap: break-word;
  hyphens: auto;
  line-height: 1.2;
  font-family: map.get($font, family);
  border: none;
  text-decoration: none;
  // color: inherit;
  // font-size: calc(12px + 1.5vw);
  // font-size: min(calc(100% / var(--text-length)), calc(var(--bubble-size) / 4));
  font-size: 1cqw;
}

@keyframes float {
  0%,
  100% {
    transform: translate(0, 0);
  }
  50% {
    transform: translate(0, var(--float-distance));
  }
}

@keyframes wiggle {
  0% {
    transform: rotate(0deg) scale(var(--hover-scale));
  }
  25% {
    transform: rotate(calc(-1 * var(--wiggle-rotation)))
      scale(var(--hover-scale));
  }
  75% {
    transform: rotate(var(--wiggle-rotation)) scale(var(--hover-scale));
  }
  100% {
    transform: rotate(0deg) scale(var(--hover-scale));
  }
}
